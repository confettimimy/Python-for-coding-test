• 깊이 우선 탐색(DFS)

: 가능한 모든 경로(후보)를 탐색

따라서 불필요할 것 같은 경로를 사전에 차단하거나 하는 등의 행동이 없으므로 경우의 수를 줄이지 못한다.




• 백트래킹(Backtracking)

: 기본적으로 모든 경우의 수를 탐색하는 것이지만 특정 조건이 만족하는 경우에만 탐색을 하기 때문에 시간복잡도를 줄일 수 있게된다.

해를 찾아가는 도중, 지금의 경로가 해가 될 것 같지 않으면 그 경로를 더이상 가지 않고 되돌아간다.

반복문의 횟수까지 줄일 수 있으므로 효율적.

이를 가지치기라고 하는데, 불필요한 부분을 쳐내고 최대한 올바른 쪽으로 간다는 의미이다.

일반적으로 불필요한 경로를 조기에 차단할 수 있게 되어 경우의 수가 줄어들긴 하다.
하지만 만약 N!의 경우의 수를 가진 문제에서 최악의 경우에는 여전히 지수함수 시간을 필요로 하므로 처리가 불가능 할 수도 있다. 가지치기를 얼마나 잘하느냐에 따라 효율성이 갈린다.




정리하면, 백트래킹은 모든 가능한 경우의 수 중에서 특정한 조건을 만족하는 경우에만 살펴보는 것이다.

답이 될 만한지 판단하고 그렇지 않으면 그 부분까지 탐색하는 것을 그만두고 가지치기하는 것을 백트래킹이라 생각하면 된다.

주로 문제 풀이에서는, 
DFS 등으로 모든 경우의 수를 탐색하는 과정에서 조건문 등을 걸어 답이 절대로 될 수 없는 상황을 정의하고, 그러한 상황일 경우에는 탐색을 중지시킨 뒤 그 이전으로 돌아가 다시 다른 경우를 탐색하게끔 구현하도록 한다,